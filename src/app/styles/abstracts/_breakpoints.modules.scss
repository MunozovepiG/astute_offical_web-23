$large-desktop: 1728px;
$normal-desktop: 1440px;
$tablet: 834px;
$large-mobile:430px;
$small-mobile: 320px;



.full-width {
    width: 100vw;  
    height: 100vh;  
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; 
    background-color: pink;
}

.section {
    flex: 1;
    min-height: 100vh;
    width: 100%;
    margin: 0;
    padding: 0;
    background-color: orange; 
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; 
}
/* ... other styles ... */


/* ... other styles ... */

/* Container with margin on the outside */
.grid-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    width: calc(100% - 32px); /* Subtracting 32px from both sides */
    margin: 0 32px; /* Outside margin */
    max-width: calc(100% - 64px); /* Adjusted max-width */
}

/* Grid items with margin between them */
.grid-item {
    box-sizing: border-box;
    flex: 0 0 calc((100% - 48px) / 12); /* Subtracting 24px for the margin between columns */
    padding: 0;
  //  background-color: blue;
    //border: 1px solid #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    box-sizing: border-box;
    overflow: hidden;
    margin-left: 12px; /* 24px divided by 2 for the margin between columns */
}

/* Remove the left margin from the first item and the right margin from the last item */
.grid-item:first-child {
    margin-left: 0;
}

.grid-item:last-child {
    margin-right: 0;
}

/* ... other styles ... */

  .grid-item + .grid-item {
   // margin-left: 1%; 
   margin-left: 0;
  }

  .span-6 {
    flex: 0 0 50%;
    padding: 0;  /* Remove padding to span the whole width */
}

/* Remove the left margin from the second item to make them adjacent */
.grid-item.span-6 + .grid-item.span-6 {
    margin-left: 0; 
    
}
//the responsive queries

/* Media query for large desktop */
@media (min-width: $large-desktop) {
    /* Your styles for large desktop here */
    .section {
        width: $large-desktop; 
      //  background-color: bisque;     /* 100% of viewport width */        /* Remove any default padding */
    }
}

/* Media query for normal desktop */
@media (min-width: $normal-desktop) and (max-width: 1727px) {
    /* Your styles for normal desktop here */
    .section {
        width: $normal-desktop;  
       // background-color: blueviolet;    /* 100% of viewport width */        /* Remove any default padding */
    }
}

/* Media query for tablet */
@media (min-width: $tablet) and (max-width: 1439px) {
    /* Your styles for tablet here */

    .grid-item {
        flex: 0 0 100%; /* Make items take up full width */
        margin-left: 0; /* Remove left margin */
        margin-right: 0; /* Remove right margin */
      //  background-color: maroon;
    }

    .section {
        width: $tablet;      /* 100% of viewport width */        /* Remove any default padding */
    }
}

/* Media query for large mobile */
@media (min-width: $large-mobile) and (max-width: 833px) {

    .section {
        width: $large-mobile;      /* 100% of viewport width */        /* Remove any default padding */
    }
    .grid-container {
        flex-direction: column; /* Stack items vertically */
        max-width: $large-mobile;
        width: 100%;
    }

    .grid-item {
        flex: 0 0 100%; /* Make items take up full width */
        margin-left: 0; /* Remove left margin */
        margin-right: 0; /* Remove right margin */
       // background-color: aqua;
    }

    .grid-item + .grid-item {
        margin-top: 12px; /* Add margin between stacked items */
    }

    /* Adjusting the span items */
    .grid-item.span-6 {
        width: $large-mobile ;
        flex: 1; /* Allow the item to grow and occupy available space */
        margin-left: 0; /* Remove left margin */
        margin-right: 0; /* Remove right margin */
        min-width: 0; /* Ensure there's no min-width constraint */
    }
}

/* Media query for small mobile */
@media (max-width: $large-mobile) {
    .section {
        width: $small-mobile;      /* 100% of viewport width */        /* Remove any default padding */
    }
    .grid-container {
        flex-direction: column; /* Stack items vertically */
        max-width: $small-mobile;
        width: 100%;
    }

    .grid-item {
        flex: 0 0 100%; /* Make items take up full width */
        margin-left: 0; /* Remove left margin */
        margin-right: 0; /* Remove right margin */
       // background-color: red;
    }

    .grid-item + .grid-item {
        margin-top: 12px; /* Add margin between stacked items */
    }

    /* Adjusting the span items */
    .grid-item.span-6 {
        width: $small-mobile ;
        flex: 1; /* Allow the item to grow and occupy available space */
        margin-left: 0; /* Remove left margin */
        margin-right: 0; /* Remove right margin */
        min-width: 0; /* Ensure there's no min-width constraint */
    }
}